MODULE 5: -----> ROBERTO SANTIAGO OLIVA
Numpy 1D Arrays:

import numpy as np
a = np.array([0,1,2,3,4])
a.size
5
a.ndim
1
])
b=np.array([3.1,11.02,6.2,213.2,5.2])
e(b)
type(b)
numpy.ndarray
type
b.dtype
dtype('float64')
# Slicing:
# Slicing:
c
c=np.array([20,1,2,3, 4])
c
array([20,  1,  2,  3,  4])
=100
c[0]=100
c
c
array([100,   1,   2,   3,   4])
c
c[4]=0
c
array([100,   1,   2,   3,   0])
d
d=c[1:4]
d
array([1, 2, 3])
c
c[3:5]=300,400
c
array([100,   1,   2, 300, 400])
c
c[1:3]=200
c
array([100, 200, 200, 300, 400])
# Vector Addition and Subtraction:
v=[1,0]
u=[1,0]
v=[1,0]
z=[]
for n,m in zip(u,v):
    z.append(n+m)
u=np.array([1,0])
v=np.array([0,1])
z=u+v
z
u=np.array([1,0])
v=np.array([0,1])
z=u+v
z
array([1, 1])
:
# Array multiplication:
z
y=np.array([1,2])
z=2*y
z
array([2, 4])
#Product of two numpy arrays:
#Product of two numpy arrays:
u=np.array([1,2])
v=np.array([3,2])
z=u*v
z
u=np.array([1,2])
v=np.array([3,2])
z=u*v
z
array([3, 4])
roduct:
# Dot product:
result
u=np.array([1,2])
v=np.array([3,1])
result=np.dot(u,v)
result
5
# Adding Constant to an numpy Array:
z
u=np.array([1,2,3,-1])
z=u+1
z
array([2, 3, 4, 0])
# Universal Functions:
# Universal Functions:
a=np.array([1,-1,1,-1])
mean_a=a.mean()
mean_a
a=np.array([1,-1,1,-1])
mean_a=a.mean()
mean_a
0.0
_b
b=np.array([1,-2,3,4,5])
max_b=b.max()
max_b
5
y
np.pi
x=np.array([0,np.pi/2,np.pi])
y=np.sin(x)
y
array([0.0000000e+00, 1.0000000e+00, 1.2246468e-16])
np.linspace(-2,2,num=9)
array([-2. , -1.5, -1. , -0.5,  0. ,  0.5,  1. ,  1.5,  2. ])
x=np.linspace(0,2*np.pi,100)
y=np.sin(x)
import matplotlib.pyplot as plt
%matplotlib inline
plt.plot(x,y)
[<matplotlib.lines.Line2D at 0x3764af0>]

Questions Numpy 1D Arrays:
Questions Numpy 1D Arrays:
# What is the result of the following operation?: 
np.array([1,-1])*np.array([1,1])
array([ 1, -1])
# What is the result of the following operation: 
np.dot(np.array([1,-1]),np.array([1,1]))
0
Numpy 2D Arrays:

a
a = [[11,12,13],[21,22,23],[31,32,33]]
a
[[11, 12, 13], [21, 22, 23], [31, 32, 33]]
A=np.array(a)
m
A.ndim
2
A.shape
(3, 3)
A.size
A.size
9
[[2,1],[1,2]])
Y=np.array([[2,1],[1,2]])
Z
Z=2*Y
Z
array([[4, 2],
       [2, 4]])
Y=np.array([[2,1],[1,2]])
X=np.array([[1,0],[0,1]])
Y=np.array([[2,1],[1,2]])
Z
Z=X*Y
Z
array([[2, 0],
       [0, 2]])
Questions Numpy 2D Arrays:

A
# How many rows are in the following numpy array?
​
A = np.array([[1,2],[3,4],[5,6],[7,8]])
A
array([[1, 2],
       [3, 4],
       [5, 6],
       [7, 8]])
# Is it possible to perform the following operation?
​
# A = np.array([[1,2],[3,4],[5,6],[7,8]])
​
# B = np.array([[1,2,3],[4,5,6],[7,8,9]])
​
# np.dot(A,B)
Respuesta: No, no se puede porque no tienen el mismo número de columnas y filas.

Review Questions Module 5:
# What is the result of the following lines of code:
​
a=np.array([0,1,0,1,0])
​
b=np.array([1,0,1,0,1])
​
a*b
array([0, 0, 0, 0, 0])
# What is the result of the following lines of code:
​
a=np.array([0,1])
​
b=np.array([1,0])
​
np.dot(a,b)
0
# What is the result of the following lines of code:
​
a=np.array([1,1,1,1,1])
​
a+10
array([11, 11, 11, 11, 11])
# 
# What is the correct code to perform matrix multiplication on the matrix A and B?
Respuesta: np.dot(A,B)

FINAL EXAM:
# What is the result of the following operation?:
3+2*2
7
)
# What is the type of the following variable: 
type(True)
bool
# What is the result of the following operation?:
int(3.2)
3
# Consider the string 
A='1234567' 
# what is the result of the following operation: 
A[1::2]
'246'
# Consider the string 
Name="Michael Jackson" 
# What is the result of the following operation 
Name.find('el')
5
# The variables 
A='1' 
#and 
B='2' 
# What is the result of the operation?: 
A+B
'12'
F.upper()
# Consider the variable 
F="You are wrong" 
# Convert the values in the variable F to uppercase:
F.upper()
'YOU ARE WRONG'
# Consider the tuple 
tuple1=("A","B","C" ) 
# What is the result of the following operation?:
tuple1[-1]
'C'
# Consider the tuple 
A=((11,12),[21,22]) 
# That contains a tuple and list. What is the result of the following operation 
A[1]
[21, 22]
# Consider the tuple 
A=((11,12),[21,22]) 
# That contains a tuple and list. What is the result of the following operation 
A[0][1]
12
# What is the result of the following operation 
'1,2,3,4'.split(',')
['1', '2', '3', '4']
# Concatenate the following lists:
A=[1,'a']
B=[2,1,'d']
A+B
[1, 'a', 2, 1, 'd']
# How do you cast the list 'A' to the set 'a'?
a=set(A)
V
# Consider the Set: 
V={'A','B'} 
# What is the result of:
V.add('C')
V
{'A', 'B', 'C'}
V
# Consider the Set: 
V={'A','B','C' } 
#What is the result of:
V.add('C')
V
{'A', 'B', 'C'}
# What is the output of the following lines of code:
​
x="Go"
​
if(x!="Go"):
​
    print('Stop')
​
else:
​
    print('Go ')
​
print('Mike')
Go 
Mike
# What is the output of the following lines of code:
​
x="Go"
​
if(x=="Go"):
​
    print('Go ')
​
else:
​
    print('Stop')
​
print('Mike')
Go 
Mike
# How many iterations are performed in the following loop?
​
for n in range(3):
​
    print(n)
0
1
2
# What does the following loop print?
​
for n in range(3):
​
    print(n+1)
1
2
3
# What is the output of the following few lines of code ?
​
A=['1','2','3']
​
for a in A:
​
    print(2*a)
11
22
33
# Consider the function add, what is the result of calling the following Add('1','1') (look closely at the return statement )
​
def Add(x,y):
​
    z=y+x
​
    return(y)
Add("1","1")
'1'
# Consider the class Points, what are the data attributes:
​
class Points(object):
​
    def __init__(self,x,y):
​
        self.x=x
​
        self.y=y
​
    def print_point(self):
​
        print('x=',self.x,'y=',self.y)
# What is the result of running the following lines of code ?
​
class Points(object):
​
    def __init__(self,x,y):
​
        self.x=x
​
        self.y=y
​
    def print_point(self):
​
        print('x=',self.x,' y=',self.y)
​
p1=Points(1,2)
​
p1.print_point()
x= 1  y= 2
# What is the result of running the following lines of code ?
​
class Points(object):
​
    def __init__(self,x,y):
​
        self.x=x
​
        self.y=y
​
    def print_point(self):
​
        print('x=',self.x,' y=',self.y)
​
p2=Points(1,2)
​
p2.x=2
​
p2.print_point()
x= 2  y= 2
# Consider the following line of code: with open(example1,"r") as file1:
​
# What mode is the file object in?
Respuesta: read
​
